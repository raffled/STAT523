pi
d.sin
cos(3)
cos
.Primitive("cos")
(sin(3 + 0.01) - sin(3 - 0.01))/0.02
cos(3)
help(force)
help(mean)
help(force)
d.sin
(sin(3 + 0.01) - sin(3 - 0.01))/0.02
cos(3)
f <- sin
h <- 0.01
x <- 3
pi
gllik
d.gllik
gllik()
gllik()
q()
n
116 - 98
18*1.5
104.5-27
source('~/.active-rstudio-document', echo=TRUE)
gllik.x
gllik
d.gllik.x
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=300, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=300, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=300, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=300, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=300, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=300, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=300, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=300, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
x <- rgamma(n=30, shape=4.5)
gllik <- function() {
s <- sum(log(x))
n <- length(x)
function(a) {
(a - 1) * s - n * lgamma(a)
}
}
## Get the likelihood function and derivatives
gllik.x <- gllik()
d1.gllik.x <- make_derivative(gllik.x, 0.01)
d2.gllik.x <- make_derivative(d1.gllik.x, 0.01)
## estimate
newton_search(f = d1.gllik.x, df = d2.gllik.x, guess = mean(x))
53/21
